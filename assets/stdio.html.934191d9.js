import{_ as s,o as n,c as a,e}from"./app.cc4bf3f5.js";const l={},i=e(`<h1 id="\u6807\u51C6-i-o" tabindex="-1"><a class="header-anchor" href="#\u6807\u51C6-i-o" aria-hidden="true">#</a> \u6807\u51C6 I/O</h1><h2 id="echo" tabindex="-1"><a class="header-anchor" href="#echo" aria-hidden="true">#</a> echo</h2><p><code>echo</code> \u547D\u4EE4\u7528\u4E8E\u5C06\u6307\u5B9A\u5185\u5BB9\u8F93\u51FA\u5230\u663E\u793A\u5C4F(\u6807\u51C6\u8F93\u51FA)\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token builtin class-name">echo</span> this is a <span class="token builtin class-name">test</span>
this is a <span class="token builtin class-name">test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u7684\u53C2\u6570\u5982\u4E0B\u3002</p><ul><li><code>-e</code> \u89E3\u91CA\u8F6C\u4E49\u5B57\u7B26\u3002</li><li><code>-n</code> \u4E0D\u8F93\u51FA\u884C\u5C3E\u7684\u6362\u884C\u7B26</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token builtin class-name">echo</span> <span class="token string">&quot;a<span class="token entity" title="\\n">\\n</span>b&quot;</span>
a<span class="token punctuation">\\</span>nb

$ <span class="token builtin class-name">echo</span> -e <span class="token string">&quot;a<span class="token entity" title="\\n">\\n</span>b&quot;</span>
a
b
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5982\u679C\u4E0D\u52A0 <code>-e</code> \u53C2\u6570\uFF0C<code>\\n</code> \u5C31\u4F1A\u6309\u5B57\u9762\u5F62\u5F0F\u8F93\u51FA\uFF1B\u52A0\u4E86\u4EE5\u540E\uFF0C\u5C31\u88AB\u89E3\u91CA\u6210\u4E86\u6362\u884C\u7B26\u3002</p><p>\u5F15\u53F7\u4E4B\u4E2D\u53EF\u4EE5\u5305\u62EC\u591A\u4E2A\u6362\u884C\u7B26\uFF0C\u5373\u53EF\u4EE5\u8F93\u51FA\u591A\u884C\u6587\u672C\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;&lt;HTML&gt;
    &lt;HEAD&gt;
          &lt;TITLE&gt;Page Title&lt;/TITLE&gt;
    &lt;/HEAD&gt;
    &lt;BODY&gt;
          Page body.
    &lt;/BODY&gt;
&lt;/HTML&gt;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="read" tabindex="-1"><a class="header-anchor" href="#read" aria-hidden="true">#</a> read</h2><p><code>read</code> \u547D\u4EE4\u88AB\u7528\u6765\u4ECE\u6807\u51C6\u8F93\u5165\u8BFB\u53D6\u5355\u884C\u6570\u636E\u3002\u8FD9\u4E2A\u547D\u4EE4\u53EF\u4EE5\u7528\u6765\u8BFB\u53D6\u952E\u76D8\u8F93\u5165\uFF0C\u5F53\u4F7F\u7528\u91CD\u5B9A\u5411\u7684\u65F6\u5019\uFF0C\u8BFB\u53D6\u6587\u4EF6\u4E2D\u7684\u4E00\u884C\u6570\u636E\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">read</span> <span class="token punctuation">[</span>-options<span class="token punctuation">]</span> <span class="token punctuation">[</span>variable<span class="token punctuation">..</span>.<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684 variable \u7528\u6765\u5B58\u50A8\u8F93\u5165\u6570\u503C\u7684\u4E00\u4E2A\u6216\u591A\u4E2A\u53D8\u91CF\u540D\u3002\u5982\u679C\u6CA1\u6709\u63D0\u4F9B\u53D8\u91CF\u540D\uFF0Cshell \u53D8\u91CF <code>REPLY</code> \u4F1A\u5305\u542B\u6570\u636E\u884C\u3002</p><p>\u57FA\u672C\u4E0A\uFF0Cread \u4F1A\u628A\u6765\u81EA\u6807\u51C6\u8F93\u5165\u7684\u5B57\u6BB5\u8D4B\u503C\u7ED9\u5177\u4F53\u7684\u53D8\u91CF\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> -n <span class="token string">&quot;Please enter an integer -&gt; &quot;</span>
<span class="token builtin class-name">read</span> int
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>read</code> \u53EF\u4EE5\u7ED9\u591A\u4E2A\u53D8\u91CF\u8D4B\u503C\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># read-multiple: read multiple values from keyboard</span>
<span class="token builtin class-name">echo</span> -n <span class="token string">&quot;Enter one or more values &gt; &quot;</span>
<span class="token builtin class-name">read</span> var1 var2 var3 var4 var5
<span class="token builtin class-name">echo</span> <span class="token string">&quot;var1 = &#39;<span class="token variable">$var1</span>&#39;&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;var2 = &#39;<span class="token variable">$var2</span>&#39;&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;var3 = &#39;<span class="token variable">$var3</span>&#39;&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;var4 = &#39;<span class="token variable">$var4</span>&#39;&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;var5 = &#39;<span class="token variable">$var5</span>&#39;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u811A\u672C\u7684\u7528\u6CD5\u5982\u4E0B\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ read-multiple
Enter one or <span class="token function">more</span> values <span class="token operator">&gt;</span> a b c d e
var1 <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span>
var2 <span class="token operator">=</span> <span class="token string">&#39;b&#39;</span>
var3 <span class="token operator">=</span> <span class="token string">&#39;c&#39;</span>
var4 <span class="token operator">=</span> <span class="token string">&#39;d&#39;</span>
var5 <span class="token operator">=</span> <span class="token string">&#39;e&#39;</span>

$ read-multiple
Enter one or <span class="token function">more</span> values <span class="token operator">&gt;</span> a
var1 <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span>
var2 <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
var3 <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
var4 <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
var5 <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>

$ read-multiple
Enter one or <span class="token function">more</span> values <span class="token operator">&gt;</span> a b c d e f g
var1 <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span>
var2 <span class="token operator">=</span> <span class="token string">&#39;b&#39;</span>
var3 <span class="token operator">=</span> <span class="token string">&#39;c&#39;</span>
var4 <span class="token operator">=</span> <span class="token string">&#39;d&#39;</span>
var5 <span class="token operator">=</span> <span class="token string">&#39;e f g&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C read \u547D\u4EE4\u63A5\u53D7\u5230\u53D8\u91CF\u503C\u6570\u76EE\u5C11\u4E8E\u671F\u671B\u7684\u6570\u5B57\uFF0C\u90A3\u4E48\u989D\u5916\u7684\u53D8\u91CF\u503C\u4E3A\u7A7A\uFF0C\u800C\u591A\u4F59\u7684\u8F93\u5165\u6570\u636E\u5219\u4F1A \u88AB\u5305\u542B\u5230\u6700\u540E\u4E00\u4E2A\u53D8\u91CF\u4E2D\u3002</p><p>\u5982\u679C read \u547D\u4EE4\u4E4B\u540E\u6CA1\u6709\u5217\u51FA\u53D8\u91CF\u540D\uFF0C\u5219\u4E00\u4E2A shell \u53D8\u91CF <code>REPLY</code>\uFF0C\u5C06\u4F1A\u5305\u542B\u6240\u6709\u7684\u8F93\u5165\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># read-single: read multiple values into default variable</span>
<span class="token builtin class-name">echo</span> -n <span class="token string">&quot;Enter one or more values &gt; &quot;</span>
<span class="token builtin class-name">read</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;REPLY = &#39;<span class="token environment constant">$REPLY</span>&#39;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u811A\u672C\u7684\u8F93\u51FA\u7ED3\u679C\u5982\u4E0B\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ read-single
Enter one or <span class="token function">more</span> values <span class="token operator">&gt;</span> a b c d
<span class="token environment constant">REPLY</span> <span class="token operator">=</span> <span class="token string">&#39;a b c d&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>read \u547D\u4EE4\u7684\u53C2\u6570\u5982\u4E0B\u3002</p><ul><li><code>-a array</code> \u628A\u8F93\u5165\u8D4B\u503C\u5230\u6570\u7EC4 array \u4E2D\uFF0C\u4ECE\u7D22\u5F15\u53F7\u96F6\u5F00\u59CB\u3002</li><li><code>-d delimiter</code> \u7528\u5B57\u7B26\u4E32 delimiter \u4E2D\u7684\u7B2C\u4E00\u4E2A\u5B57\u7B26\u6307\u793A\u8F93\u5165\u7ED3\u675F\uFF0C\u800C\u4E0D\u662F\u4E00\u4E2A\u6362\u884C\u7B26\u3002</li><li><code>-e</code> \u4F7F\u7528 Readline \u6765\u5904\u7406\u8F93\u5165\u3002\u8FD9\u4F7F\u5F97\u4E0E\u547D\u4EE4\u884C\u76F8\u540C\u7684\u65B9\u5F0F\u7F16\u8F91\u8F93\u5165\u3002</li><li><code>-n num</code> \u8BFB\u53D6 num \u4E2A\u8F93\u5165\u5B57\u7B26\uFF0C\u800C\u4E0D\u662F\u6574\u884C\u3002</li><li><code>-p prompt</code> \u4E3A\u8F93\u5165\u663E\u793A\u63D0\u793A\u4FE1\u606F\uFF0C\u4F7F\u7528\u5B57\u7B26\u4E32 prompt\u3002</li><li><code>-r</code> Raw mode. \u4E0D\u628A\u53CD\u659C\u6760\u5B57\u7B26\u89E3\u91CA\u4E3A\u8F6C\u4E49\u5B57\u7B26\u3002</li><li><code>-s</code> Silent mode. \u4E0D\u4F1A\u5728\u5C4F\u5E55\u4E0A\u663E\u793A\u8F93\u5165\u7684\u5B57\u7B26\u3002\u5F53\u8F93\u5165\u5BC6\u7801\u548C\u5176\u5B83\u786E\u8BA4\u4FE1\u606F\u7684\u65F6\u5019\uFF0C\u8FD9\u4F1A\u5F88\u6709\u5E2E\u52A9\u3002</li><li><code>-t seconds</code> \u8D85\u65F6. \u51E0\u79D2\u949F\u540E\u7EC8\u6B62\u8F93\u5165\u3002read \u4F1A\u8FD4\u56DE\u4E00\u4E2A\u975E\u96F6\u9000\u51FA\u72B6\u6001\uFF0C\u82E5\u8F93\u5165\u8D85\u65F6\u3002</li><li><code>-u fd</code> \u4F7F\u7528\u6587\u4EF6\u63CF\u8FF0\u7B26 fd \u4E2D\u7684\u8F93\u5165\uFF0C\u800C\u4E0D\u662F\u6807\u51C6\u8F93\u5165\u3002</li></ul><p><code>-p</code> \u7684\u4F8B\u5B50\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">read</span> -p <span class="token string">&quot;Enter one or more values &gt; &quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;REPLY = &#39;<span class="token environment constant">$REPLY</span>&#39;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>-t</code> \u548C <code>-s</code> \u7684\u4F8B\u5B50\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">if</span> <span class="token builtin class-name">read</span> -t <span class="token number">10</span> -sp <span class="token string">&quot;Enter secret pass phrase &gt; &quot;</span> secret_pass<span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> -e <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>Secret pass phrase = &#39;<span class="token variable">$secret_pass</span>&#39;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u8FD9\u4E2A\u811A\u672C\u63D0\u793A\u7528\u6237\u8F93\u5165\u4E00\u4E2A\u5BC6\u7801\uFF0C\u5E76\u7B49\u5F85\u8F93\u5165 10 \u79D2\u949F\u3002\u5982\u679C\u5728\u7279\u5B9A\u7684\u65F6\u95F4\u5185\u6CA1\u6709\u5B8C\u6210\u8F93\u5165\uFF0C \u5219\u811A\u672C\u4F1A\u9000\u51FA\u5E76\u8FD4\u56DE\u4E00\u4E2A\u9519\u8BEF\u3002\u56E0\u4E3A\u5305\u542B\u4E86\u4E00\u4E2A -s \u9009\u9879\uFF0C\u6240\u4EE5\u8F93\u5165\u7684\u5BC6\u7801\u4E0D\u4F1A\u51FA\u73B0\u5728\u5C4F\u5E55\u4E0A\u3002</p><p>Shell \u7684\u5185\u90E8\u53D8\u91CF <code>IFS</code> \u53EF\u4EE5\u63A7\u5236\u8F93\u5165\u5B57\u6BB5\u7684\u5206\u79BB\u3002\u4F8B\u5982\uFF0C\u8FD9\u4E2A /etc/passwd \u6587\u4EF6\u5305\u542B\u7684\u6570\u636E\u884C \u4F7F\u7528\u5192\u53F7\u4F5C\u4E3A\u5B57\u6BB5\u5206\u9694\u7B26\u3002\u901A\u8FC7\u628A IFS \u7684\u503C\u66F4\u6539\u4E3A\u5355\u4E2A\u5192\u53F7\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528 read \u8BFB\u53D6 /etc/passwd \u4E2D\u7684\u5185\u5BB9\uFF0C\u5E76\u6210\u529F\u5730\u628A\u5B57\u6BB5\u5206\u7ED9\u4E0D\u540C\u7684\u53D8\u91CF\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># read-ifs: read fields from a file</span>
<span class="token assign-left variable">FILE</span><span class="token operator">=</span>/etc/passwd
<span class="token builtin class-name">read</span> -p <span class="token string">&quot;Enter a user name &gt; &quot;</span> user_name
<span class="token assign-left variable">file_info</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">grep</span> <span class="token string">&quot;^<span class="token variable">$user_name</span>:&quot;</span> $FILE<span class="token variable">)</span></span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> -n <span class="token string">&quot;<span class="token variable">$file_info</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token assign-left variable"><span class="token environment constant">IFS</span></span><span class="token operator">=</span><span class="token string">&quot;:&quot;</span> <span class="token builtin class-name">read</span> user pw uid gid name home shell <span class="token operator">&lt;&lt;&lt;</span> <span class="token string">&quot;<span class="token variable">$file_info</span>&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;User = &#39;<span class="token variable">$user</span>&#39;&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;UID = &#39;<span class="token variable">$uid</span>&#39;&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;GID = &#39;<span class="token variable">$gid</span>&#39;&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Full Name = &#39;<span class="token variable">$name</span>&#39;&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Home Dir. = &#39;<span class="token variable">$home</span>&#39;&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Shell = &#39;<span class="token variable">$shell</span>&#39;&quot;</span>
<span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;No such user &#39;<span class="token variable">$user_name</span>&#39;&quot;</span> <span class="token operator">&gt;</span><span class="token file-descriptor important">&amp;2</span>
    <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Shell \u5141\u8BB8\u5728\u4E00\u4E2A\u547D\u4EE4\u4E4B\u524D\u7ACB\u5373\u53D1\u751F\u4E00\u4E2A\u6216\u591A\u4E2A\u53D8\u91CF\u8D4B\u503C\u3002\u8FD9\u4E9B\u8D4B\u503C\u4E3A\u8DDF\u968F\u7740\u7684\u547D\u4EE4\u66F4\u6539\u73AF\u5883\u53D8\u91CF\u3002\u8FD9\u4E2A\u8D4B\u503C\u7684\u5F71\u54CD\u662F\u6682\u65F6\u7684\uFF1B\u53EA\u662F\u5728\u547D\u4EE4\u5B58\u5728\u671F\u95F4\u6539\u53D8\u73AF\u5883\u53D8\u91CF\u3002</p><p>\u867D\u7136\u901A\u5E38 read \u547D\u4EE4\u63A5\u53D7\u6807\u51C6\u8F93\u5165\uFF0C\u4F46\u662F\u60A8\u4E0D\u80FD\u8FD9\u6837\u505A:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> \u201Cfoo\u201D <span class="token operator">|</span> <span class="token builtin class-name">read</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6211\u4EEC\u671F\u671B\u8FD9\u4E2A\u547D\u4EE4\u80FD\u751F\u6548\uFF0C\u4F46\u662F\u5B83\u4E0D\u80FD\u3002\u8FD9\u4E2A\u547D\u4EE4\u5C06\u663E\u793A\u6210\u529F\uFF0C\u4F46\u662F REPLY \u53D8\u91CF \u603B\u662F\u4E3A\u7A7A\u3002\u4E3A\u4EC0\u4E48\u4F1A\u8FD9\u6837?</p><p>\u7B54\u6848\u4E0E shell \u5904\u7406\u7BA1\u9053\u7EBF\u7684\u65B9\u5F0F\u6709\u5173\u7CFB\u3002\u5728 bash(\u548C\u5176\u5B83 shells\uFF0C\u4F8B\u5982 sh)\u4E2D\uFF0C\u7BA1\u9053\u7EBF \u4F1A\u521B\u5EFA\u5B50 shell\u3002\u5B83\u4EEC\u662F shell \u7684\u526F\u672C\uFF0C\u4E14\u7528\u6765\u6267\u884C\u547D\u4EE4\u7684\u73AF\u5883\u53D8\u91CF\u5728\u7BA1\u9053\u7EBF\u4E2D\u3002\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0Cread \u547D\u4EE4\u5C06\u5728\u5B50 shell \u4E2D\u6267\u884C\u3002</p><p>\u5728\u7C7B Unix \u7684\u7CFB\u7EDF\u4E2D\uFF0C\u5B50 shell \u6267\u884C\u7684\u65F6\u5019\uFF0C\u4F1A\u4E3A\u8FDB\u7A0B\u521B\u5EFA\u7236\u73AF\u5883\u7684\u526F\u672C\u3002\u5F53\u8FDB\u7A0B\u7ED3\u675F \u4E4B\u540E\uFF0C\u73AF\u5883\u526F\u672C\u5C31\u4F1A\u88AB\u7834\u574F\u6389\u3002\u8FD9\u610F\u5473\u7740\u4E00\u4E2A\u5B50 shell \u6C38\u8FDC\u4E0D\u80FD\u6539\u53D8\u7236\u8FDB\u7A0B\u7684\u73AF\u5883\u3002read \u8D4B\u503C\u53D8\u91CF\uFF0C \u7136\u540E\u4F1A\u53D8\u4E3A\u73AF\u5883\u7684\u4E00\u90E8\u5206\u3002\u5728\u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0Cread \u5728\u5B83\u7684\u5B50 shell \u73AF\u5883\u4E2D\uFF0C\u628A foo \u8D4B\u503C\u7ED9\u53D8\u91CF REPLY\uFF0C \u4F46\u662F\u5F53\u547D\u4EE4\u9000\u51FA\u540E\uFF0C\u5B50 shell \u548C\u5B83\u7684\u73AF\u5883\u5C06\u88AB\u7834\u574F\u6389\uFF0C\u8FD9\u6837\u8D4B\u503C\u7684\u5F71\u54CD\u5C31\u4F1A\u6D88\u5931\u3002</p><p>\u4F7F\u7528 here \u5B57\u7B26\u4E32\u662F\u89E3\u51B3\u6B64\u95EE\u9898\u7684\u4E00\u79CD\u65B9\u6CD5\u3002</p><p>\u4E0B\u9762\u662F\u751F\u6210\u83DC\u5355\u7684\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># read-menu: a menu driven system information program</span>
<span class="token function">clear</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;
Please Select:

    1. Display System Information
    2. Display Disk Space
    3. Display Home Space Utilization
    0. Quit
&quot;</span>
<span class="token builtin class-name">read</span> -p <span class="token string">&quot;Enter selection [0-3] &gt; &quot;</span>

<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token environment constant">$REPLY</span> <span class="token operator">=~</span> ^<span class="token punctuation">[</span><span class="token number">0</span>-3<span class="token punctuation">]</span>$ <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token environment constant">$REPLY</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;Program terminated.&quot;</span>
        <span class="token builtin class-name">exit</span>
    <span class="token keyword">fi</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token environment constant">$REPLY</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;Hostname: <span class="token environment constant">$HOSTNAME</span>&quot;</span>
        <span class="token function">uptime</span>
        <span class="token builtin class-name">exit</span>
    <span class="token keyword">fi</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token environment constant">$REPLY</span> <span class="token operator">==</span> <span class="token number">2</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token function">df</span> -h
        <span class="token builtin class-name">exit</span>
    <span class="token keyword">fi</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token environment constant">$REPLY</span> <span class="token operator">==</span> <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">id</span> -u<span class="token variable">)</span></span> -eq <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
            <span class="token builtin class-name">echo</span> <span class="token string">&quot;Home Space Utilization (All Users)&quot;</span>
            <span class="token function">du</span> -sh /home/*
        <span class="token keyword">else</span>
            <span class="token builtin class-name">echo</span> <span class="token string">&quot;Home Space Utilization (<span class="token environment constant">$USER</span>)&quot;</span>
            <span class="token function">du</span> -sh <span class="token environment constant">$HOME</span>
        <span class="token keyword">fi</span>
        <span class="token builtin class-name">exit</span>
    <span class="token keyword">fi</span>
<span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Invalid entry.&quot;</span> <span class="token operator">&gt;</span><span class="token file-descriptor important">&amp;2</span>
    <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,43),t=[i];function p(o,c){return n(),a("div",null,t)}var d=s(l,[["render",p],["__file","stdio.html.vue"]]);export{d as default};
