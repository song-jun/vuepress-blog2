import{_ as n,o as s,c as a,e as t}from"./app.cc4bf3f5.js";const p={},o=t(`<div class="custom-container tip"><p class="custom-container-title">Python</p><p>\u5199\u63A5\u53E3API<br> ......</p></div><h2 id="\u5199\u63A5\u53E3api" tabindex="-1"><a class="header-anchor" href="#\u5199\u63A5\u53E3api" aria-hidden="true">#</a> \u5199\u63A5\u53E3API</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token punctuation">,</span> jsonify

app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/testGet&#39;</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">calculateGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    a <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
    b <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
    c <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">int</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
    res <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;result&quot;</span><span class="token punctuation">:</span> c<span class="token punctuation">}</span>
    <span class="token keyword">return</span> jsonify<span class="token punctuation">(</span>content_type<span class="token operator">=</span><span class="token string">&#39;application/json;charset=utf-8&#39;</span><span class="token punctuation">,</span>
                   reason<span class="token operator">=</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span>
                   charset<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">,</span>
                   status<span class="token operator">=</span><span class="token string">&#39;200&#39;</span><span class="token punctuation">,</span>
                   content<span class="token operator">=</span>res<span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/testPost&#39;</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">calculatePost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    params <span class="token operator">=</span> request<span class="token punctuation">.</span>form <span class="token keyword">if</span> request<span class="token punctuation">.</span>form <span class="token keyword">else</span> request<span class="token punctuation">.</span>json
    <span class="token keyword">print</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span>
    a <span class="token operator">=</span> params<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
    b <span class="token operator">=</span> params<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
    c <span class="token operator">=</span> a <span class="token operator">+</span> b
    res <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;result&quot;</span><span class="token punctuation">:</span> c<span class="token punctuation">}</span>
    <span class="token keyword">return</span> jsonify<span class="token punctuation">(</span>content_type<span class="token operator">=</span><span class="token string">&#39;application/json;charset=utf-8&#39;</span><span class="token punctuation">,</span>
                   reason<span class="token operator">=</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span>
                   charset<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">,</span>
                   status<span class="token operator">=</span><span class="token string">&#39;200&#39;</span><span class="token punctuation">,</span>
                   content<span class="token operator">=</span>res<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">&#39;0.0.0.0&#39;</span><span class="token punctuation">,</span> threaded<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8070</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),e=[o];function c(i,l){return s(),a("div",null,e)}var r=n(p,[["render",c],["__file","python-api.html.vue"]]);export{r as default};
