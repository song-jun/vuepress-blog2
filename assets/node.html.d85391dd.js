import{_ as n,o as s,c as a,e}from"./app.e3c83e88.js";const t={},p=e(`<div class="custom-container tip"><p class="custom-container-title">Node</p><p>npm\u6DD8\u5B9D\u955C\u50CF<br> \u5B89\u88C5http-server<br> nodeJs \u722C\u866B<br> ......</p></div><h2 id="npm\u6DD8\u5B9D\u955C\u50CF" tabindex="-1"><a class="header-anchor" href="#npm\u6DD8\u5B9D\u955C\u50CF" aria-hidden="true">#</a> npm\u6DD8\u5B9D\u955C\u50CF</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> -g cnpm --registry<span class="token operator">=</span>https://registry.npm.taobao.org
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="npm\u53D1\u5E03" tabindex="-1"><a class="header-anchor" href="#npm\u53D1\u5E03" aria-hidden="true">#</a> npm\u53D1\u5E03</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#\u521D\u59CB\u5316\u9879\u76EE\uFF0C\u4F7F\u7528</span>
vue init webpack-simple my-project
<span class="token function">npm</span> publish --access<span class="token operator">=</span>public<span class="token punctuation">(</span>\u516C\u5171<span class="token punctuation">)</span>
<span class="token function">npm</span> publish<span class="token punctuation">(</span>\u79C1\u6709<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="npm-login" tabindex="-1"><a class="header-anchor" href="#npm-login" aria-hidden="true">#</a> npm login</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#\u8F93\u5165</span>
<span class="token function">npm</span> login
<span class="token comment">#\u7EE7\u7EED</span>
Username:mrsong
password\uFF1A<span class="token comment">####</span>
Email\uFF1A289097246@qq.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="npm-logout" tabindex="-1"><a class="header-anchor" href="#npm-logout" aria-hidden="true">#</a> npm logout</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#\u547D\u4EE4\u9000\u51FA\u767B\u5F55</span>
<span class="token function">npm</span> <span class="token builtin class-name">logout</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u67E5\u770Bnpm\u767B\u5F55\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#\u67E5\u770Bnpm\u767B\u5F55\u72B6\u6001" aria-hidden="true">#</a> \u67E5\u770Bnpm\u767B\u5F55\u72B6\u6001</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">who</span> am i
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="npm\u53D1\u5E03\u5305" tabindex="-1"><a class="header-anchor" href="#npm\u53D1\u5E03\u5305" aria-hidden="true">#</a> npm\u53D1\u5E03\u5305</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#\u79C1\u6709\u5305</span>
<span class="token function">npm</span> publish
<span class="token comment">#\u516C\u5F00\u5305</span>
<span class="token function">npm</span> publish --access<span class="token operator">=</span>public
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5B89\u88C5http-server" tabindex="-1"><a class="header-anchor" href="#\u5B89\u88C5http-server" aria-hidden="true">#</a> \u5B89\u88C5http-server</h2><p>node\u542F\u52A8\u672C\u5730\u670D\u52A1(\u5B89\u88C5http-server)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code># \u5B89\u88C5
npm i http<span class="token operator">-</span>server <span class="token operator">-</span>g
# \u542F\u52A8\u670D\u52A1
http<span class="token operator">-</span>server
# \u542F\u52A8\u670D\u52A1\u5E76\u5236\u5B9A\u7AEF\u53E3
http<span class="token operator">-</span>server <span class="token operator">-</span>a <span class="token number">0.0</span><span class="token number">.0</span><span class="token number">.0</span> <span class="token operator">-</span>p <span class="token number">8008</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="nodejs-\u722C\u866B" tabindex="-1"><a class="header-anchor" href="#nodejs-\u722C\u866B" aria-hidden="true">#</a> nodeJs \u722C\u866B</h2><p>cheerio</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> https <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;https&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// const http = require(&#39;http&#39;) /* \u65B9\u5F0F\u4E8C\u65F6\u4F7F\u7528*/</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> cheerio <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;cheerio&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> imgDir <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;img&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token string">&#39;https://www.xxxxxx.com/&#39;</span>

https<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">// \u5B89\u5168\u5224\u65AD</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>statusCode<span class="token punctuation">}</span> <span class="token operator">=</span> res
    <span class="token keyword">const</span> contentType <span class="token operator">=</span> res<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;content-type&#39;</span><span class="token punctuation">]</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>statusCode<span class="token punctuation">,</span> contentType<span class="token punctuation">)</span>

    <span class="token keyword">let</span> err <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>statusCode <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        err <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BF7\u6C42\u72B6\u6001\u9519\u8BEF&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^text\\/html</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>contentType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        err <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BF7\u6C42\u7C7B\u578B\u9519\u8BEF&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
        res<span class="token punctuation">.</span><span class="token function">resume</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u91CD\u7F6E\u7F13\u5B58</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> resData <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    res<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        resData <span class="token operator">+=</span> data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    res<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token comment">//\u5C06\u8BF7\u6C42\u6570\u636E\u4FDD\u5B58\u5728\u672C\u5730</span>
        <span class="token keyword">let</span> $ <span class="token operator">=</span> cheerio<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>resData<span class="token punctuation">)</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> el</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> imgUrl <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;src&#39;</span><span class="token punctuation">)</span>
            <span class="token comment">// console.log($(el).attr(&#39;src&#39;))</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>imgUrl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> filename <span class="token operator">=</span> imgUrl<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token comment">/* \u65B9\u5F0F\u4E00*/</span>
                <span class="token function">request</span><span class="token punctuation">(</span><span class="token string">&#39;http:&#39;</span><span class="token operator">+</span>imgUrl<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span>imgDir <span class="token operator">+</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> filename<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">/* \u65B9\u5F0F\u4E8C*/</span>
                <span class="token comment">// var req = http.get(&#39;http:&#39;+imgUrl, function (res) {</span>
                <span class="token comment">//     var imgData = &quot;&quot;;</span>
                <span class="token comment">//     res.setEncoding(&quot;binary&quot;); //\u4E00\u5B9A\u8981\u8BBE\u7F6Eresponse\u7684\u7F16\u7801\u4E3Abinary\u5426\u5219\u4F1A\u4E0B\u8F7D\u4E0B\u6765\u7684\u56FE\u7247\u6253\u4E0D\u5F00</span>
                <span class="token comment">//     res.on(&quot;data&quot;, function (chunk) {</span>
                <span class="token comment">//       imgData += chunk;</span>
                <span class="token comment">//     });</span>
                <span class="token comment">//     res.on(&quot;end&quot;, function () {</span>
                <span class="token comment">//      let filename = imgUrl.split(&#39;/&#39;).pop()</span>
                <span class="token comment">//       fs.writeFile(imgDir + &#39;/&#39; + filename, imgData, &quot;binary&quot;, function (err) {</span>
                <span class="token comment">//         if (err) {</span>
                <span class="token comment">//           console.log(&quot;\u4FDD\u5B58\u5931\u8D25&quot;);</span>
                <span class="token comment">//         }</span>
                <span class="token comment">//         console.log(&quot;\u4FDD\u5B58\u6210\u529F&quot;);</span>
                <span class="token comment">//       });</span>
                <span class="token comment">//     });</span>
                <span class="token comment">//     res.on(&quot;error&quot;, function (err) {</span>
                <span class="token comment">//       console.log(&quot;\u8BF7\u6C42\u5931\u8D25&quot;);</span>
                <span class="token comment">//     });</span>
                <span class="token comment">//   });</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6570\u636E\u4F20\u8F93\u5B8C\u6BD5&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BF7\u6C42\u9519\u8BEF&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),o=[p];function c(i,l){return s(),a("div",null,o)}var r=n(t,[["render",c],["__file","node.html.vue"]]);export{r as default};
