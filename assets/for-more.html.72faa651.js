import{_ as n,o as s,c as a,e as p}from"./app.edc3ba14.js";const t={},e=p(`<h2 id="for-in" tabindex="-1"><a class="header-anchor" href="#for-in" aria-hidden="true">#</a> for in</h2><ul><li>for...in\u6839\u636Ekey\u904D\u5386</li></ul><p>\u904D\u5386\u5BF9\u8C61\u65F6\u4F1A\u4ECE\u539F\u578B\u4E0A\u7EE7\u627F\u5C5E\u6027\uFF0C\u53EF\u4EE5\u7528hasOwnProperty\uFF08\uFF09\u8BC6\u522B\u51FA\u7EE7\u627F\u5C5E\u6027\uFF0C \u904D\u5386\u6570\u7EC4\u4F1A\u628A\u6570\u7EC4\u4E0B\u6807\u770B\u505A\u5C5E\u6027\u540D\uFF0C\u4E5F\u5C31\u8F93\u51FA\u7ED3\u679C\u662F\u6570\u7EC4\u7684\u4E0B\u6807\uFF0C\u4E14\u4E0D\u4E00\u5B9A\u6309\u7167\u6570\u7EC4\u7684\u7D22\u5F15\u987A\u5E8F\u3002 \u8F93\u51FA\u7ED3\u679C\u662F\u5B57\u7B26\u4E32</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span><span class="token punctuation">{</span>s
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> child<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&#39;lala&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> child<span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//name</span>
<span class="token comment">//getName</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> child<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>child<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">//name</span>
<span class="token keyword">var</span> aa <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;aa&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;bb&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;cc&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> aa<span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 0  1  2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="for-of" tabindex="-1"><a class="header-anchor" href="#for-of" aria-hidden="true">#</a> for of</h2><ul><li>for...of\u6839\u636E\u503C\u904D\u5386</li></ul><p>for...of\u7528\u6765\u904D\u5386\u6570\u636E\uFF0C\u4F8B\u5982\u6570\u7EC4\u4E2D\u7684\u503C\uFF0C\u4F46\u662F\u4E5F\u53EF\u4EE5\u904D\u5386\u5B57\u7B26\u4E32\uFF0C\u652F\u6301Map\u548CSet\u5BF9\u8C61\u7684\u904D\u5386\uFF0C\u907F\u514D\u4E86\u6240\u6709for...in\u7684\u5F0A\u7AEF\uFF0C\u4E0EforEach\u76F8\u6BD4\u53EF\u4EE5\u6B63\u786E\u54CD\u5E94break\uFF0Ccontinue\uFF0Creturn\u8BED\u53E5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> aa <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;aa&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;bb&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;cc&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> aa<span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// aa  bb  cc</span>
<span class="token keyword">var</span> str<span class="token operator">=</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> str<span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// a  b  c</span>
<span class="token keyword">var</span> set<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;aa&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;bb&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;cc&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> set<span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//aa  bb  cc</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="foreach\u6839\u636Eindex\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#foreach\u6839\u636Eindex\u904D\u5386" aria-hidden="true">#</a> forEach\u6839\u636Eindex\u904D\u5386</h2><ul><li>forEach\u4E00\u822C\u53EA\u80FD\u9002\u7528\u4E8E\u6570\u7EC4,\u529F\u80FD\u662F\u4ECE\u5934\u5230\u5C3E\u628A\u6570\u7EC4\u904D\u5386\u4E00\u904D\uFF0C\u53EF\u4EE5\u6709\u4E09\u4E2A\u53C2\u6570\uFF0C\u540E\u4E24\u4E2A\u53EF\u4EE5\u4E0D\u5199\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;aa&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;bb&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span>i<span class="token punctuation">,</span>a</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span>i<span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u5206\u522B\u5BF9\u5E94\uFF1A\u6570\u7EC4\u5143\u7D20\uFF0C\u5143\u7D20\u7684\u7D22\u5F15\uFF0C\u6570\u7EC4\u672C\u8EAB</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//aa  0  [&#39;aa&#39;,&#39;bb&#39;]</span>
<span class="token comment">//bb  1  [&#39;aa&#39;,&#39;bb&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>forEach\u662Ffor\u5FAA\u73AF\u7684\u52A0\u5F3A\u7248</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">eachFor</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>i<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> aa<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
aa<span class="token punctuation">.</span><span class="token function">eachFor</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//5  0</span>
<span class="token comment">//6  1</span>
<span class="token comment">//7  2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="map\u6839\u636Eindex\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#map\u6839\u636Eindex\u904D\u5386" aria-hidden="true">#</a> map\u6839\u636Eindex\u904D\u5386</h2><ul><li>\u548CforEach\u76F8\u6BD4\uFF0C\u4F7F\u7528\u65B9\u6CD5\u4E00\u6837\u6709\u4E09\u4E2A\u53C2\u6570\uFF0Cmap\u53EA\u80FD\u5BF9\u5143\u7D20\u8FDB\u884C\u52A0\u5DE5\u5904\u7406\uFF0C\u4EA7\u751F\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4\u5BF9\u8C61\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span>i<span class="token punctuation">,</span>arr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> v<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//[2,4,6]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="filter" tabindex="-1"><a class="header-anchor" href="#filter" aria-hidden="true">#</a> filter</h2><ul><li>filter\u5BF9\u539F\u6570\u7EC4\u8FDB\u884C\u8FC7\u6EE4\u7B5B\u9009\uFF0C\u751F\u6210\u65B0\u7684\u6570\u7EC4,\u4F7F\u7528\u548Cmap\u6837\u6709\u4E09\u4E2A\u53C2\u6570\u3002\u5982\u679C\u5BF9\u7A7A\u6570\u7EC4\u8FDB\u884C\u7B5B\u9009\uFF0C\u4F1A\u8FD4\u56DEundefined\u3002filter\u4E0D\u4F1A\u6539\u53D8\u539F\u6570\u7EC4\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> aa<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
aa<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span>i<span class="token punctuation">,</span>self</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> self<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">==</span> i<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//[1,2,3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="for" tabindex="-1"><a class="header-anchor" href="#for" aria-hidden="true">#</a> for</h2><ul><li>for\u5E38\u89C4\u8BED\u53E5\u904D\u5386\uFF0C\u53EF\u5FAA\u73AF\u6570\u5B57,\u5B57\u7B26\u4E32\uFF0C\u6570\u7EC4\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//0  1  2  3  4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22),o=[e];function c(i,l){return s(),a("div",null,o)}var k=n(t,[["render",c],["__file","for-more.html.vue"]]);export{k as default};
